<?xml version="1.0" encoding="UTF-8"?>
<!--

    Licensed to the Apache Software Foundation (ASF) under one
    or more contributor license agreements.  See the NOTICE file
    distributed with this work for additional information
    regarding copyright ownership.  The ASF licenses this file
    to you under the Apache License, Version 2.0 (the
    "License"); you may not use this file except in compliance
    with the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <packaging>pom</packaging>
    <modules>
        <module>pulsar-trino-connector-original</module>
    </modules>
    <parent>
        <groupId>org.apache</groupId>
        <artifactId>apache</artifactId>
        <version>23</version>
    </parent>

    <groupId>org.apache.pulsar</groupId>
    <artifactId>pulsar-trino</artifactId>
    <version>1.0.0-SNAPSHOT</version>

    <name>Pulsar Trino :: Parent</name>

    <properties>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>

        <include>**/Test*.java,**/*Test.java,**/*Tests.java,**/*TestCase.java</include>
        <exclude/>
        <groups/>
        <excludedGroups>quarantine</excludedGroups>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <redirectTestOutputToFile>true</redirectTestOutputToFile>

        <!-- required for running tests on JDK11+ -->
        <test.additional.args>
            --add-opens java.base/jdk.internal.loader=ALL-UNNAMED
            --add-opens java.base/java.lang=ALL-UNNAMED <!--Mockito-->
            --add-opens java.base/java.io=ALL-UNNAMED <!--Bookkeeper NativeIO -->
            --add-opens java.base/sun.net=ALL-UNNAMED <!--netty.DnsResolverUtil-->
            --add-opens java.management/sun.management=ALL-UNNAMED <!--JvmDefaultGCMetricsLogger-->
        </test.additional.args>
        <testReuseFork>true</testReuseFork>
        <testForkCount>4</testForkCount>
        <testRealAWS>false</testRealAWS>
        <testRetryCount>1</testRetryCount>
        <testJacocoAgentArgument/>
        <testHeapDumpPath>/tmp</testHeapDumpPath>

        <maven-compiler-plugin.version>3.10.1</maven-compiler-plugin.version>
        <!-- keep using okhttp3 3.x for Presto -->
        <okhttp3.version>3.14.9</okhttp3.version>
        <!-- use okio version that matches the okhttp3 version -->
        <okio.version>1.17.2</okio.version>
        <airlift.version>0.199</airlift.version>
        <pulsar.version>2.11.0-SNAPSHOT</pulsar.version>
        <presto.version>334</presto.version>
        <jsonwebtoken.version>0.11.1</jsonwebtoken.version>
        <joda.version>2.10.5</joda.version>
        <avro.version>1.10.2</avro.version>
        <jetty.version>9.4.48.v20220622</jetty.version>
        <commons-compress.version>1.21</commons-compress.version>

        <bookkeeper.version>4.15.0</bookkeeper.version>
        <zookeeper.version>3.8.0</zookeeper.version>
        <commons-cli.version>1.5.0</commons-cli.version>
        <snappy.version>1.1.8.4</snappy.version> <!-- ZooKeeper server -->
        <dropwizardmetrics.version>4.1.12.1</dropwizardmetrics.version> <!-- ZooKeeper server -->
        <curator.version>5.1.0</curator.version>
        <netty.version>4.1.77.Final</netty.version>
        <netty-tc-native.version>2.0.52.Final</netty-tc-native.version>
        <jetty.version>9.4.48.v20220622</jetty.version>
        <conscrypt.version>2.5.2</conscrypt.version>
        <jersey.version>2.34</jersey.version>
        <athenz.version>1.10.50</athenz.version>
        <prometheus.version>0.16.0</prometheus.version>
        <vertx.version>3.9.8</vertx.version>
        <rocksdb.version>6.29.4.1</rocksdb.version>
        <slf4j.version>1.7.32</slf4j.version>
        <commons.collections4.version>4.4</commons.collections4.version>
        <log4j2.version>2.17.1</log4j2.version>
        <bouncycastle.version>1.69</bouncycastle.version>
        <bouncycastlefips.version>1.0.2</bouncycastlefips.version>
        <jackson.version>2.13.3</jackson.version>
        <reflections.version>0.9.11</reflections.version>
        <swagger.version>1.6.2</swagger.version>
        <puppycrawl.checkstyle.version>8.37</puppycrawl.checkstyle.version>
        <dockerfile-maven.version>1.4.13</dockerfile-maven.version>
        <typetools.version>0.5.0</typetools.version>
        <protobuf3.version>3.19.2</protobuf3.version>
        <protoc3.version>${protobuf3.version}</protoc3.version>
        <grpc.version>1.45.1</grpc.version>
        <google-http-client.version>1.41.0</google-http-client.version>
        <perfmark.version>0.19.0</perfmark.version>
        <protoc-gen-grpc-java.version>${grpc.version}</protoc-gen-grpc-java.version>
        <gson.version>2.8.9</gson.version>
        <sketches.version>0.8.3</sketches.version>
        <hbc-core.version>2.2.0</hbc-core.version>
        <cassandra.version>3.11.2</cassandra.version>
        <aerospike-client.version>4.4.20</aerospike-client.version>
        <kafka-client.version>2.7.2</kafka-client.version>
        <rabbitmq-client.version>5.5.3</rabbitmq-client.version>
        <aws-sdk.version>1.11.774</aws-sdk.version>
        <avro.version>1.10.2</avro.version>
        <joda.version>2.10.5</joda.version>
        <jclouds.version>2.5.0</jclouds.version>
        <guice.version>5.1.0</guice.version>
        <sqlite-jdbc.version>3.36.0.3</sqlite-jdbc.version>
        <mysql-jdbc.version>8.0.11</mysql-jdbc.version>
        <postgresql-jdbc.version>42.3.3</postgresql-jdbc.version>
        <clickhouse-jdbc.version>0.3.2</clickhouse-jdbc.version>
        <mariadb-jdbc.version>2.7.5</mariadb-jdbc.version>
        <openmldb-jdbc.version>0.4.4-hotfix1</openmldb-jdbc.version>
        <hdfs-offload-version3>3.3.3</hdfs-offload-version3>
        <json-smart.version>2.4.7</json-smart.version>
        <opensearch.version>1.2.4</opensearch.version>
        <elasticsearch-java.version>8.1.0</elasticsearch-java.version>
        <presto.version>334</presto.version>
        <scala.binary.version>2.13</scala.binary.version>
        <scala-library.version>2.13.6</scala-library.version>
        <debezium.version>1.7.2.Final</debezium.version>
        <debezium.postgresql.version>42.3.3</debezium.postgresql.version>
        <debezium.mysql.version>8.0.28</debezium.mysql.version>
        <jsonwebtoken.version>0.11.1</jsonwebtoken.version>
        <opencensus.version>0.28.0</opencensus.version>
        <hbase.version>2.4.9</hbase.version>
        <guava.version>31.0.1-jre</guava.version>
        <jcip.version>1.0</jcip.version>
        <prometheus-jmx.version>0.16.1</prometheus-jmx.version>
        <confluent.version>7.0.1</confluent.version>
        <kafka.confluent.schemaregistryclient.version>5.3.0</kafka.confluent.schemaregistryclient.version>
        <kafka.confluent.avroserializer.version>5.3.0</kafka.confluent.avroserializer.version>
        <aircompressor.version>0.20</aircompressor.version>
        <asynchttpclient.version>2.12.1</asynchttpclient.version>
        <jcommander.version>1.82</jcommander.version>
        <commons-lang3.version>3.11</commons-lang3.version>
        <commons-configuration.version>1.10</commons-configuration.version>
        <commons-io.version>2.8.0</commons-io.version>
        <commons-codec.version>1.15</commons-codec.version>
        <javax.ws.rs-api.version>2.1</javax.ws.rs-api.version>
        <hdrHistogram.version>2.1.9</hdrHistogram.version>
        <javax.servlet-api>3.1.0</javax.servlet-api>
        <caffeine.version>2.9.1</caffeine.version>
        <java-semver.version>0.9.0</java-semver.version>
        <jline.version>2.14.6</jline.version>
        <jline3.version>3.21.0</jline3.version>
        <hppc.version>0.9.1</hppc.version>
        <spark-streaming_2.10.version>2.1.0</spark-streaming_2.10.version>
        <assertj-core.version>3.18.1</assertj-core.version>
        <lombok.version>1.18.22</lombok.version>
        <javax.annotation-api.version>1.3.2</javax.annotation-api.version>
        <jaxb-api>2.3.1</jaxb-api>
        <javax.activation.version>1.2.0</javax.activation.version>
        <jakarta.activation.version>1.2.2</jakarta.activation.version>
        <jakarta.xml.bind.version>2.3.3</jakarta.xml.bind.version>
        <jakarta.validation.version>2.0.2</jakarta.validation.version>
        <jna.version>4.2.0</jna.version>
        <kubernetesclient.version>12.0.1</kubernetesclient.version>
        <okhttp3.version>4.9.3</okhttp3.version>
        <!-- use okio version that matches the okhttp3 version -->
        <okio.version>2.8.0</okio.version>
        <!-- override kotlin-stdlib used by okio in order to address CVE-2020-29582 -->
        <kotlin-stdlib.version>1.4.32</kotlin-stdlib.version>
        <nsq-client.version>1.0</nsq-client.version>
        <cron-utils.version>9.1.6</cron-utils.version>
        <spring.version>5.3.20</spring.version>
        <apache-http-client.version>4.5.13</apache-http-client.version>
        <apache-httpcomponents.version>4.4.15</apache-httpcomponents.version>
        <jetcd.version>0.5.11</jetcd.version>
        <snakeyaml.version>1.30</snakeyaml.version>
        <ant.version>1.10.12</ant.version>
        <seancfoley.ipaddress.version>5.3.3</seancfoley.ipaddress.version>
        <disruptor.version>3.4.3</disruptor.version>
        <zstd-jni.version>1.5.2-3</zstd-jni.version>
        <netty-reactive-streams.version>2.0.6</netty-reactive-streams.version>

        <!-- test dependencies -->
        <testcontainers.version>1.17.2</testcontainers.version>
        <hamcrest.version>2.2</hamcrest.version>

        <!-- Set docker-java.version to the version of docker-java used in Testcontainers -->
        <docker-java.version>3.2.13</docker-java.version>
        <kerby.version>1.1.1</kerby.version>
        <testng.version>7.3.0</testng.version>
        <mockito.version>3.12.4</mockito.version>
        <powermock.version>2.0.9</powermock.version>
        <javassist.version>3.25.0-GA</javassist.version>
        <skyscreamer.version>1.5.0</skyscreamer.version>
        <objenesis.version>3.1</objenesis.version>
        <awaitility.version>4.2.0</awaitility.version>

        <!-- Plugin dependencies -->
        <protobuf-maven-plugin.version>0.6.1</protobuf-maven-plugin.version>
        <exec-maven-plugin.version>3.0.0</exec-maven-plugin.version>
        <license-maven-plugin.version>4.0.rc2</license-maven-plugin.version>
        <directory-maven-plugin.version>1.0</directory-maven-plugin.version>
        <maven-enforcer-plugin.version>3.0.0</maven-enforcer-plugin.version>
        <!-- surefire.version is defined in apache parent pom -->
        <!-- it is used for surefire, failsafe and surefire-report plugins -->
        <!-- do not upgrade surefire.version to 3.0.0-M5 since it runs slowly and breaks tests. -->
        <surefire.version>3.0.0-M3</surefire.version>
        <maven-assembly-plugin.version>3.3.0</maven-assembly-plugin.version>
        <maven-compiler-plugin.version>3.10.1</maven-compiler-plugin.version>
        <maven-dependency-plugin.version>3.3.0</maven-dependency-plugin.version>
        <maven-modernizer-plugin.version>2.3.0</maven-modernizer-plugin.version>
        <maven-shade-plugin>3.3.0</maven-shade-plugin>
        <maven-antrun-plugin.version>3.0.0</maven-antrun-plugin.version>
        <properties-maven-plugin.version>1.0.0</properties-maven-plugin.version>
        <nifi-nar-maven-plugin.version>1.2.0</nifi-nar-maven-plugin.version>
        <maven-checkstyle-plugin.version>3.1.2</maven-checkstyle-plugin.version>
        <git-commit-id-plugin.version>4.0.2</git-commit-id-plugin.version>
        <wagon-ssh-external.version>3.4.3</wagon-ssh-external.version>
        <os-maven-plugin.version>1.7.0</os-maven-plugin.version>
        <jacoco-maven-plugin.version>0.8.7</jacoco-maven-plugin.version>
        <spotbugs-maven-plugin.version>4.2.2</spotbugs-maven-plugin.version>
        <spotbugs.version>4.2.2</spotbugs.version>
        <errorprone.version>2.5.1</errorprone.version>
        <errorprone.javac.version>9+181-r4173-1</errorprone.javac.version>
        <errorprone-slf4j.version>0.1.4</errorprone-slf4j.version>
        <j2objc-annotations.version>1.3</j2objc-annotations.version>
        <lightproto-maven-plugin.version>0.4</lightproto-maven-plugin.version>
        <dependency-check-maven.version>7.1.0</dependency-check-maven.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.asynchttpclient</groupId>
                <artifactId>async-http-client</artifactId>
                <version>${asynchttpclient.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>io.netty</groupId>
                        <artifactId>*</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>com.typesafe.netty</groupId>
                        <artifactId>netty-reactive-streams</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>org.testng</groupId>
                <artifactId>testng</artifactId>
                <version>${testng.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.yaml</groupId>
                        <artifactId>*</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>org.hamcrest</groupId>
                <artifactId>hamcrest</artifactId>
                <version>${hamcrest.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.awaitility</groupId>
                <artifactId>awaitility</artifactId>
                <version>${awaitility.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-core</artifactId>
                <version>${mockito.version}</version>
            </dependency>

            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-inline</artifactId>
                <version>${mockito.version}</version>
            </dependency>

            <dependency>
                <groupId>org.powermock</groupId>
                <artifactId>powermock-reflect</artifactId>
                <version>${powermock.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.zookeeper</groupId>
                <artifactId>zookeeper</artifactId>
                <version>${zookeeper.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>ch.qos.logback</groupId>
                        <artifactId>logback-core</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>ch.qos.logback</groupId>
                        <artifactId>logback-classic</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>io.netty</groupId>
                        <artifactId>netty-tcnative</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.zookeeper</groupId>
                <artifactId>zookeeper-jute</artifactId>
                <version>${zookeeper.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-cli</groupId>
                <artifactId>commons-cli</artifactId>
                <version>${commons-cli.version}</version>
            </dependency>
            <dependency>
                <groupId>io.dropwizard.metrics</groupId>
                <artifactId>metrics-core</artifactId>
                <version>${dropwizardmetrics.version}</version>
            </dependency>
            <dependency>
                <groupId>io.dropwizard.metrics</groupId>
                <artifactId>metrics-graphite</artifactId>
                <version>${dropwizardmetrics.version}</version>
            </dependency>
            <dependency>
                <groupId>io.dropwizard.metrics</groupId>
                <artifactId>metrics-jvm</artifactId>
                <version>${dropwizardmetrics.version}</version>
            </dependency>
            <dependency>
                <groupId>org.xerial.snappy</groupId>
                <artifactId>snappy-java</artifactId>
                <version>${snappy.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.zookeeper</groupId>
                <artifactId>zookeeper</artifactId>
                <classifier>tests</classifier>
                <version>${zookeeper.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>ch.qos.logback</groupId>
                        <artifactId>logback-core</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>ch.qos.logback</groupId>
                        <artifactId>logback-classic</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>io.netty</groupId>
                        <artifactId>netty-tcnative</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>org.apache.bookkeeper</groupId>
                <artifactId>bookkeeper-server</artifactId>
                <version>${bookkeeper.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.bouncycastle</groupId>
                        <artifactId>*</artifactId>
                    </exclusion>
                    <exclusion>
                        <artifactId>slf4j-log4j12</artifactId>
                        <groupId>org.slf4j</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>log4j</artifactId>
                        <groupId>log4j</groupId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.jboss.netty</groupId>
                        <artifactId>netty</artifactId>
                    </exclusion>
                    <!-- exclude all netty dependencies, use whatever pulsar is using -->
                    <exclusion>
                        <groupId>io.netty</groupId>
                        <artifactId>netty-*</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>org.apache.bookkeeper</groupId>
                <artifactId>cpu-affinity</artifactId>
                <version>${bookkeeper.version}</version>
            </dependency>

            <dependency>
                <groupId>io.vertx</groupId>
                <artifactId>vertx-core</artifactId>
                <version>${vertx.version}</version>
            </dependency>
            <dependency>
                <groupId>io.vertx</groupId>
                <artifactId>vertx-web</artifactId>
                <version>${vertx.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.curator</groupId>
                <artifactId>curator-recipes</artifactId>
                <version>${curator.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.apache.zookeeper</groupId>
                        <artifactId>*</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>org.apache.bookkeeper</groupId>
                <artifactId>bookkeeper-common-allocator</artifactId>
                <version>${bookkeeper.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.bookkeeper</groupId>
                <artifactId>bookkeeper-tools-framework</artifactId>
                <version>${bookkeeper.version}</version>
            </dependency>

            <!-- reflection libs -->
            <dependency>
                <groupId>org.reflections</groupId>
                <artifactId>reflections</artifactId>
                <version>${reflections.version}</version>
            </dependency>

            <!-- exclude the grpc version from bookkeeper and use the one defined here -->
            <dependency>
                <groupId>org.apache.bookkeeper</groupId>
                <artifactId>stream-storage-java-client</artifactId>
                <version>${bookkeeper.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>io.grpc</groupId>
                        <artifactId>grpc-all</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>io.grpc</groupId>
                        <artifactId>grpc-testing</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>io.grpc</groupId>
                        <artifactId>grpc-okhttp</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>com.squareup.okhttp</groupId>
                        <artifactId>okhttp</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>com.squareup.okio</groupId>
                        <artifactId>okio</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <!-- exclude the grpc version from bookkeeper and use the one defined here -->
            <dependency>
                <groupId>org.apache.bookkeeper</groupId>
                <artifactId>stream-storage-server</artifactId>
                <version>${bookkeeper.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>io.grpc</groupId>
                        <artifactId>grpc-all</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>io.grpc</groupId>
                        <artifactId>grpc-okhttp</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>com.squareup.okhttp</groupId>
                        <artifactId>okhttp</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>com.squareup.okio</groupId>
                        <artifactId>okio</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.codehaus.jackson</groupId>
                        <artifactId>jackson-mapper-asl</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.inferred</groupId>
                        <artifactId>freebuilder</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>org.apache.bookkeeper</groupId>
                <artifactId>bookkeeper-common</artifactId>
                <version>${bookkeeper.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.bookkeeper.stats</groupId>
                <artifactId>bookkeeper-stats-api</artifactId>
                <version>${bookkeeper.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.bookkeeper.stats</groupId>
                <artifactId>datasketches-metrics-provider</artifactId>
                <version>${bookkeeper.version}</version>
                <exclusions>
                    <exclusion>
                        <artifactId>slf4j-log4j12</artifactId>
                        <groupId>org.slf4j</groupId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>org.apache.bookkeeper.stats</groupId>
                <artifactId>prometheus-metrics-provider</artifactId>
                <version>${bookkeeper.version}</version>
            </dependency>

            <dependency>
                <groupId>org.rocksdb</groupId>
                <artifactId>rocksdbjni</artifactId>
                <version>${rocksdb.version}</version>
            </dependency>

            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-server</artifactId>
                <version>${jetty.version}</version>
            </dependency>

            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-alpn-conscrypt-server</artifactId>
                <version>${jetty.version}</version>
            </dependency>

            <dependency>
                <groupId>org.conscrypt</groupId>
                <artifactId>conscrypt-openjdk-uber</artifactId>
                <version>${conscrypt.version}</version>
            </dependency>

            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-bom</artifactId>
                <version>${jetty.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-bom</artifactId>
                <version>${netty.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-tcnative-boringssl-static</artifactId>
                <version>${netty-tc-native.version}</version>
            </dependency>

            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-codec-haproxy</artifactId>
                <version>${netty.version}</version>
            </dependency>

            <dependency>
                <groupId>com.beust</groupId>
                <artifactId>jcommander</artifactId>
                <version>${jcommander.version}</version>
            </dependency>

            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>

            <dependency>
                <groupId>com.google.inject</groupId>
                <artifactId>guice</artifactId>
                <version>${guice.version}</version>
            </dependency>

            <dependency>
                <groupId>com.google.inject.extensions</groupId>
                <artifactId>guice-assistedinject</artifactId>
                <version>${guice.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${commons-lang3.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-compress</artifactId>
                <version>${commons-compress.version}</version>
            </dependency>

            <dependency>
                <groupId>commons-configuration</groupId>
                <artifactId>commons-configuration</artifactId>
                <version>${commons-configuration.version}</version>
            </dependency>

            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons-io.version}</version>
            </dependency>

            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>

            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-simple</artifactId>
                <version>${slf4j.version}</version>
            </dependency>

            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>jcl-over-slf4j</artifactId>
                <version>${slf4j.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-bom</artifactId>
                <version>${log4j2.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>commons-codec</groupId>
                <artifactId>commons-codec</artifactId>
                <version>${commons-codec.version}</version>
            </dependency>

            <dependency>
                <groupId>org.glassfish.jersey.core</groupId>
                <artifactId>jersey-server</artifactId>
                <version>${jersey.version}</version>
            </dependency>

            <dependency>
                <groupId>org.glassfish.jersey.core</groupId>
                <artifactId>jersey-client</artifactId>
                <version>${jersey.version}</version>
            </dependency>

            <dependency>
                <groupId>org.glassfish.jersey.inject</groupId>
                <artifactId>jersey-hk2</artifactId>
                <version>${jersey.version}</version>
            </dependency>

            <dependency>
                <groupId>org.glassfish.jersey.containers</groupId>
                <artifactId>jersey-container-servlet-core</artifactId>
                <version>${jersey.version}</version>
            </dependency>

            <dependency>
                <groupId>org.glassfish.jersey.containers</groupId>
                <artifactId>jersey-container-servlet</artifactId>
                <version>${jersey.version}</version>
            </dependency>

            <dependency>
                <groupId>javax.ws.rs</groupId>
                <artifactId>javax.ws.rs-api</artifactId>
                <version>${javax.ws.rs-api.version}</version>
            </dependency>

            <dependency>
                <groupId>org.glassfish.jersey.media</groupId>
                <artifactId>jersey-media-json-jackson</artifactId>
                <version>${jersey.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>jakarta.activation</groupId>
                        <artifactId>jakarta.activation-api</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>org.glassfish.jersey.media</groupId>
                <artifactId>jersey-media-multipart</artifactId>
                <version>${jersey.version}</version>
            </dependency>

            <dependency>
                <groupId>net.java.dev.jna</groupId>
                <artifactId>jna</artifactId>
                <version>${jna.version}</version>
            </dependency>

            <dependency>
                <groupId>com.github.docker-java</groupId>
                <artifactId>docker-java-core</artifactId>
                <version>${docker-java.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.docker-java</groupId>
                <artifactId>docker-java-api</artifactId>
                <version>${docker-java.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.docker-java</groupId>
                <artifactId>docker-java-transport-zerodep</artifactId>
                <version>${docker-java.version}</version>
            </dependency>

            <dependency>
                <groupId>com.fasterxml.jackson</groupId>
                <artifactId>jackson-bom</artifactId>
                <version>${jackson.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>org.hdrhistogram</groupId>
                <artifactId>HdrHistogram</artifactId>
                <version>${hdrHistogram.version}</version>
            </dependency>

            <dependency>
                <groupId>io.swagger</groupId>
                <artifactId>swagger-core</artifactId>
                <version>${swagger.version}</version>
            </dependency>

            <dependency>
                <groupId>io.swagger</groupId>
                <artifactId>swagger-annotations</artifactId>
                <version>${swagger.version}</version>
            </dependency>

            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>javax.servlet-api</artifactId>
                <version>${javax.servlet-api}</version>
            </dependency>

            <dependency>
                <groupId>com.github.ben-manes.caffeine</groupId>
                <artifactId>caffeine</artifactId>
                <version>${caffeine.version}</version>
            </dependency>

            <dependency>
                <groupId>com.yahoo.athenz</groupId>
                <artifactId>athenz-zts-java-client-core</artifactId>
                <version>${athenz.version}</version>
            </dependency>

            <dependency>
                <groupId>com.yahoo.athenz</groupId>
                <artifactId>athenz-zpe-java-client</artifactId>
                <version>${athenz.version}</version>
            </dependency>

            <dependency>
                <groupId>com.github.zafarkhaja</groupId>
                <artifactId>java-semver</artifactId>
                <version>${java-semver.version}</version>
            </dependency>

            <dependency>
                <groupId>io.prometheus</groupId>
                <artifactId>simpleclient</artifactId>
                <version>${prometheus.version}</version>
            </dependency>

            <dependency>
                <groupId>io.prometheus</groupId>
                <artifactId>simpleclient_hotspot</artifactId>
                <version>${prometheus.version}</version>
            </dependency>

            <dependency>
                <groupId>io.prometheus</groupId>
                <artifactId>simpleclient_log4j2</artifactId>
                <version>${prometheus.version}</version>
            </dependency>

            <dependency>
                <groupId>io.prometheus</groupId>
                <artifactId>simpleclient_servlet</artifactId>
                <version>${prometheus.version}</version>
            </dependency>

            <dependency>
                <groupId>io.prometheus</groupId>
                <artifactId>simpleclient_jetty</artifactId>
                <version>${prometheus.version}</version>
            </dependency>

            <dependency>
                <groupId>io.prometheus</groupId>
                <artifactId>simpleclient_caffeine</artifactId>
                <version>${prometheus.version}</version>
            </dependency>

            <dependency>
                <groupId>com.carrotsearch</groupId>
                <artifactId>hppc</artifactId>
                <version>${hppc.version}</version>
            </dependency>

            <dependency>
                <groupId>io.etcd</groupId>
                <artifactId>jetcd-core</artifactId>
                <version>${jetcd.version}</version>
            </dependency>

            <dependency>
                <groupId>io.etcd</groupId>
                <artifactId>jetcd-test</artifactId>
                <version>${jetcd.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-streaming_2.10</artifactId>
                <version>${spark-streaming_2.10.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>com.google.guava</groupId>
                        <artifactId>guava</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>io.netty</groupId>
                        <artifactId>netty-codec-http</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>io.netty</groupId>
                        <artifactId>netty-transport-native-epoll</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>io.netty</groupId>
                        <artifactId>netty</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>io.netty</groupId>
                        <artifactId>netty-all</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt-api</artifactId>
                <version>${jsonwebtoken.version}</version>
            </dependency>
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt-impl</artifactId>
                <version>${jsonwebtoken.version}</version>
            </dependency>
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt-jackson</artifactId>
                <version>${jsonwebtoken.version}</version>
            </dependency>

            <dependency>
                <groupId>net.jodah</groupId>
                <artifactId>typetools</artifactId>
                <version>${typetools.version}</version>
            </dependency>

            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-bom</artifactId>
                <version>${grpc.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-all</artifactId>
                <version>${grpc.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>io.grpc</groupId>
                        <artifactId>grpc-testing</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>io.grpc</groupId>
                        <artifactId>grpc-okhttp</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>com.squareup.okhttp</groupId>
                        <artifactId>okhttp</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>com.squareup.okio</groupId>
                        <artifactId>okio</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>com.google.http-client</groupId>
                <artifactId>google-http-client</artifactId>
                <version>${google-http-client.version}</version>
            </dependency>

            <dependency>
                <groupId>com.google.http-client</groupId>
                <artifactId>google-http-client-jackson2</artifactId>
                <version>${google-http-client.version}</version>
            </dependency>

            <dependency>
                <groupId>com.google.http-client</groupId>
                <artifactId>google-http-client-gson</artifactId>
                <version>${google-http-client.version}</version>
            </dependency>

            <dependency>
                <groupId>io.perfmark</groupId>
                <artifactId>perfmark-api</artifactId>
                <version>${perfmark.version}</version>
                <scope>runtime</scope>
                <exclusions>
                    <exclusion>
                        <artifactId>error_prone_annotations</artifactId>
                        <groupId>com.google.errorprone</groupId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>com.google.protobuf</groupId>
                <artifactId>protobuf-bom</artifactId>
                <version>${protobuf3.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>com.google.code.gson</groupId>
                <artifactId>gson</artifactId>
                <version>${gson.version}</version>
            </dependency>

            <dependency>
                <groupId>com.yahoo.datasketches</groupId>
                <artifactId>sketches-core</artifactId>
                <version>${sketches.version}</version>
            </dependency>

            <dependency>
                <groupId>com.amazonaws</groupId>
                <artifactId>aws-java-sdk-bom</artifactId>
                <version>${aws-sdk.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>org.apache.distributedlog</groupId>
                <artifactId>distributedlog-core</artifactId>
                <version>${bookkeeper.version}</version>
                <exclusions>
                    <!-- exclude bookkeeper, reply on the bookkeeper version that pulsar uses -->
                    <exclusion>
                        <groupId>org.apache.bookkeeper</groupId>
                        <artifactId>bookkeeper-server</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-collections4</artifactId>
                <version>${commons.collections4.version}</version>
            </dependency>

            <!-- test dependencies -->
            <dependency>
                <groupId>com.lmax</groupId>
                <artifactId>disruptor</artifactId>
                <version>${disruptor.version}</version>
            </dependency>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>testcontainers-bom</artifactId>
                <version>${testcontainers.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>com.datastax.cassandra</groupId>
                <artifactId>cassandra-driver-core</artifactId>
                <version>${cassandra.version}</version>
            </dependency>
            <dependency>
                <groupId>org.assertj</groupId>
                <artifactId>assertj-core</artifactId>
                <version>${assertj-core.version}</version>
            </dependency>

            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
            </dependency>

            <dependency>
                <groupId>javax.annotation</groupId>
                <artifactId>javax.annotation-api</artifactId>
                <version>${javax.annotation-api.version}</version>
            </dependency>

            <dependency>
                <groupId>javax.xml.bind</groupId>
                <artifactId>jaxb-api</artifactId>
                <version>${jaxb-api}</version>
            </dependency>

            <dependency>
                <groupId>jakarta.xml.bind</groupId>
                <artifactId>jakarta.xml.bind-api</artifactId>
                <version>${jakarta.xml.bind.version}</version>
            </dependency>

            <dependency>
                <groupId>com.sun.activation</groupId>
                <artifactId>javax.activation</artifactId>
                <version>${javax.activation.version}</version>
            </dependency>

            <dependency>
                <groupId>com.sun.activation</groupId>
                <artifactId>jakarta.activation</artifactId>
                <version>${jakarta.activation.version}</version>
            </dependency>

            <dependency>
                <groupId>jakarta.activation</groupId>
                <artifactId>jakarta.activation-api</artifactId>
                <version>${jakarta.activation.version}</version>
            </dependency>

            <dependency>
                <groupId>jakarta.validation</groupId>
                <artifactId>jakarta.validation-api</artifactId>
                <version>${jakarta.validation.version}</version>
            </dependency>

            <dependency>
                <groupId>io.opencensus</groupId>
                <artifactId>opencensus-api</artifactId>
                <version>${opencensus.version}</version>
            </dependency>

            <dependency>
                <groupId>io.opencensus</groupId>
                <artifactId>opencensus-contrib-http-util</artifactId>
                <version>${opencensus.version}</version>
            </dependency>

            <dependency>
                <groupId>io.opencensus</groupId>
                <artifactId>opencensus-contrib-grpc-metrics</artifactId>
                <version>${opencensus.version}</version>
            </dependency>

            <dependency>
                <groupId>org.opensearch.client</groupId>
                <artifactId>opensearch-rest-high-level-client</artifactId>
                <version>${opensearch.version}</version>
            </dependency>

            <dependency>
                <groupId>co.elastic.clients</groupId>
                <artifactId>elasticsearch-java</artifactId>
                <version>${elasticsearch-java.version}</version>
            </dependency>

            <dependency>
                <groupId>joda-time</groupId>
                <artifactId>joda-time</artifactId>
                <version>${joda.version}</version>
            </dependency>

            <dependency>
                <groupId>org.javassist</groupId>
                <artifactId>javassist</artifactId>
                <version>${javassist.version}</version>
            </dependency>

            <dependency>
                <groupId>net.jcip</groupId>
                <artifactId>jcip-annotations</artifactId>
                <version>${jcip.version}</version>
            </dependency>

            <dependency>
                <groupId>io.airlift</groupId>
                <artifactId>aircompressor</artifactId>
                <version>${aircompressor.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.openjdk.jol</groupId>
                        <artifactId>jol-core</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>org.objenesis</groupId>
                <artifactId>objenesis</artifactId>
                <version>${objenesis.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpclient</artifactId>
                <version>${apache-http-client.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpcore</artifactId>
                <version>${apache-httpcomponents.version}</version>
            </dependency>

            <dependency>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-annotations</artifactId>
                <version>${spotbugs.version}</version>
                <scope>provided</scope>
                <optional>true</optional>
            </dependency>

            <dependency>
                <groupId>com.google.errorprone</groupId>
                <artifactId>error_prone_annotations</artifactId>
                <version>${errorprone.version}</version>
            </dependency>

            <dependency>
                <groupId>com.google.j2objc</groupId>
                <artifactId>j2objc-annotations</artifactId>
                <version>${j2objc-annotations.version}</version>
            </dependency>

            <dependency>
                <groupId>org.yaml</groupId>
                <artifactId>snakeyaml</artifactId>
                <version>${snakeyaml.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.ant</groupId>
                <artifactId>ant</artifactId>
                <version>${ant.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-stdlib</artifactId>
                <version>${kotlin-stdlib.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-stdlib-common</artifactId>
                <version>${kotlin-stdlib.version}</version>
            </dependency>

            <dependency>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-stdlib-jdk8</artifactId>
                <version>${kotlin-stdlib.version}</version>
            </dependency>

            <dependency>
                <groupId>com.github.luben</groupId>
                <artifactId>zstd-jni</artifactId>
                <version>${zstd-jni.version}</version>
            </dependency>

            <dependency>
                <groupId>com.typesafe.netty</groupId>
                <artifactId>netty-reactive-streams</artifactId>
                <version>${netty-reactive-streams.version}</version>
            </dependency>
            <!-- keep using okhttp3 3.x for Presto -->
            <dependency>
                <groupId>com.squareup.okhttp3</groupId>
                <artifactId>okhttp</artifactId>
                <version>${okhttp3.version}</version>
            </dependency>
            <dependency>
                <groupId>com.squareup.okhttp3</groupId>
                <artifactId>okhttp-urlconnection</artifactId>
                <version>${okhttp3.version}</version>
            </dependency>
            <dependency>
                <groupId>com.squareup.okhttp3</groupId>
                <artifactId>logging-interceptor</artifactId>
                <version>${okhttp3.version}</version>
            </dependency>
            <dependency>
                <groupId>com.squareup.okio</groupId>
                <artifactId>okio</artifactId>
                <version>${okio.version}</version>
            </dependency>

            <!-- force specific version of slf4j -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>log4j-over-slf4j</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-jdk14</artifactId>
                <version>${slf4j.version}</version>
            </dependency>

            <dependency>
                <groupId>io.airlift</groupId>
                <artifactId>bom</artifactId>
                <version>${airlift.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.commonjava.maven.plugins</groupId>
                <artifactId>directory-maven-plugin</artifactId>
                <version>${directory-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <id>directories</id>
                        <goals>
                            <goal>directory-of</goal>
                        </goals>
                        <phase>initialize</phase>
                        <configuration>
                            <property>pulsar-trino.basedir</property>
                            <project>
                                <groupId>org.apache.pulsar</groupId>
                                <artifactId>pulsar-trino</artifactId>
                            </project>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>${maven-checkstyle-plugin.version}</version>
                <dependencies>
                    <dependency>
                        <groupId>com.puppycrawl.tools</groupId>
                        <artifactId>checkstyle</artifactId>
                        <version>${puppycrawl.checkstyle.version}</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <configLocation>${pulsar-trino.basedir}/tools/ci/checkstyle.xml</configLocation>
                    <suppressionsLocation>${pulsar-trino.basedir}/tools/ci/suppressions.xml</suppressionsLocation>
                    <includeTestSourceDirectory>true</includeTestSourceDirectory>
                    <encoding>UTF-8</encoding>
                </configuration>
                <executions>
                    <execution>
                        <id>checkstyle</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <encoding>UTF-8</encoding>
                    <showDeprecation>true</showDeprecation>
                    <showWarnings>true</showWarnings>
                    <optimize>true</optimize>
                    <!-- workaround https://issues.apache.org/jira/browse/MCOMPILER-205 -->
                    <useIncrementalCompilation>false</useIncrementalCompilation>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>${lombok.version}</version>
                        </path>
                    </annotationProcessorPaths>
                    <compilerArgs>
                        <arg>-parameters</arg>
                        <!-- enable 'all' lint warnings with some exclusions -->
                        <arg>-Xlint:all</arg>
                        <arg>-Xlint:-options</arg>
                        <arg>-Xlint:-serial</arg>
                        <arg>-Xlint:-classfile</arg>
                        <arg>-Xlint:-processing</arg>
                    </compilerArgs>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <includes>
                        <include>${include}</include>
                    </includes>
                    <excludes>
                        <exclude>**/*$*,${exclude}</exclude>
                    </excludes>
                    <groups>${groups}</groups>
                    <excludedGroups>${excludedGroups}</excludedGroups>
                    <argLine>${testJacocoAgentArgument} -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=${testHeapDumpPath} -XX:+ExitOnOutOfMemoryError -Xmx1G -XX:+UseZGC
                        -Dpulsar.allocator.pooled=true
                        -Dpulsar.allocator.leak_detection=Advanced
                        -Dpulsar.allocator.exit_on_oom=false
                        -Dpulsar.allocator.out_of_memory_policy=FallbackToHeap
                        -Dio.netty.tryReflectionSetAccessible=true
                        ${test.additional.args}
                    </argLine>
                    <reuseForks>${testReuseFork}</reuseForks>
                    <forkCount>${testForkCount}</forkCount>
                    <shutdown>kill</shutdown>
                    <redirectTestOutputToFile>${redirectTestOutputToFile}</redirectTestOutputToFile>
                    <trimStackTrace>false</trimStackTrace>
                    <systemPropertyVariables>
                        <testRealAWS>${testRealAWS}</testRealAWS>
                        <testRetryCount>${testRetryCount}</testRetryCount>
                    </systemPropertyVariables>
                    <properties>
                        <property>
                            <name>listener</name>
                            <value>org.apache.pulsar.tests.PulsarTestListener,org.apache.pulsar.tests.AnnotationListener,org.apache.pulsar.tests.FailFastNotifier,org.apache.pulsar.tests.MockitoCleanupListener,org.apache.pulsar.tests.FastThreadLocalCleanupListener,org.apache.pulsar.tests.ThreadLeakDetectorListener</value>
                        </property>
                    </properties>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>